# Generate nginx config files (and ssl configuration, if ssl was specified),
# rolling back changes if any part of the config is invalid.

- name: set client max body to allocate memory for image uploads
  lineinfile: dest=/etc/nginx/nginx.conf state=present line="        client_max_body_size 128m;" insertafter="^http"

- name: turn sendfile off for vms
  lineinfile: dest=/etc/nginx/nginx.conf state=present regexp="sendfile on;" line="        sendfile off;"
  when: env == 'development'

- include: ssl.yml
  when: ssl

- include: auth.yml
  when: auth_basic
  tags: auth

- name: ensure default nginx server is not present
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: ensure nginx config files exist
  shell: touch {{item.directory}}/{{item.file}}
  args:
    creates: "{{item.directory}}/{{item.file}}"
  with_flattened:
    - "{{confs}}"
    - "{{shared}}"

- name: backup existing nginx config files
  shell: cp {{item.file}} {{item.file}}.backup
  args:
    chdir: "{{item.directory}}"
  with_flattened:
    - "{{confs}}"
    - "{{shared}}"

- name: generate new nginx config files
  template: src={{item.template}} dest={{item.directory}}/{{item.file}}
  register: nginx_conf
  with_flattened:
    - "{{confs}}"
    - "{{shared}}"
  notify: restart nginx

- name: ensure nginx config is valid
  shell: nginx -t
  ignore_errors: yes
  register: nginx_test_valid
  changed_when: false
  when: nginx_conf | changed

- name: remove temporary backups if new nginx config files are valid
  file: path={{item.directory}}/{{item.file}}.backup state=absent
  with_flattened:
    - "{{confs}}"
    - "{{shared}}"
  when: nginx_test_valid | success

- name: restore temporary backups if new nginx config files are invalid
  shell: mv {{item.file}}.backup {{item.file}}
  args:
    chdir: "{{item.directory}}"
  with_items: "{{confs}}"
  when: nginx_test_valid | failed

- fail: msg="nginx config is invalid"
  when: nginx_test_valid | failed

- name: enable virtual hosts
  file:
    src={{nginx_dir}}/sites-available/{{item.file}}
    dest={{nginx_dir}}/sites-enabled/{{item.file}}
    state=link
  with_items: "{{confs}}"
