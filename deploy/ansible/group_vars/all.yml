#########
# PROJECT
#########

# Certain tasks may operate in a less secure (but more convenient) manner, eg.
# enabling passwordless sudo or generating self-signed ssl certs, when testing
# locally, in Vagrant. But not in production!
env: production

# This var is referenced by a few other vars, eg. git_repo, hostname, site_fqdn.
project_name: groundskeeper

# This is what you'll see at the bash prompt if/when you ssh into your server.
hostname: "{{project_name}}"

# This is the fully qualified domain name of your production server. Because
# nginx checks this value against the URL being requested, it must be the same
# as the server's DNS name. This value is overridden for Vagrant and staging
# servers.
site_fqdn: "{{project_name}}.sapling.digital"

##############
# PROVISIONING
##############

# Keys to be added to apt.
apt_keys:
  - "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"

# Ppas to be added to apt. Useful ppas (replace trusty with your Ubuntu
# version codename, if necessary):
# Git latest:     ppa:git-core/ppa
# Node.js 0.10.x: deb https://deb.nodesource.com/node_0.10 trusty main
# Node.js 0.12.x: deb https://deb.nodesource.com/node_0.12 trusty main
# Io.js 1.x:      deb https://deb.nodesource.com/iojs_1.x trusty main
# PHP7            ppa:ondrej/php
apt_ppas:
  - "deb https://deb.nodesource.com/node_4.x trusty main"
  - "ppa:git-core/ppa"
  - "ppa:ondrej/php"

# Any apt packages to install. Apt package versions may be specified like
# - git=2.1.0
apt_packages:
  - nginx
  - git
  - nodejs
  - zsh
  - vim-nox
  - python-passlib

# Any npm global modules to install. Npm module versions may be specified like
# - {name: bower, version: 1.2.3}
npm_global_modules:
  - {name: bower}
  - {name: gulp}

# Does the project require PHP & MySQL or Ruby?
requires_php: false
requires_ruby: false
requires_mysql: false

############
# WEB SERVER
############

# Should the nginx server use HTTPS instead of HTTP?
# On first configure, set this to false to avoid errors about missing
# SSL certificates. If/when SSL is required, set back to true.
ssl: false

# Should the server use HTTP/2 instead of HTTP/1.1?
h2: false

# If ssl is enabled, these cert/key files will be used by nginx. You will need
# to ensure these files are valid and already on the server (which you can do
# via cloud-init, scp, etc).
ssl_cert_path: /etc/letsencrypt/live/www.{{site_fqdn}}/fullchain.pem
ssl_key_path: /etc/letsencrypt/live/www.{{site_fqdn}}/privkey.pem

# Use a custom parameter for stronger DHE key exchange.
dhe_param_path: /etc/ssl/certs/dhparam.pem

auth_basic: false

# The directory that nginx will serve as the production site. This is typically
# where your index.html file exists (or will exist after the build process).
public_path: "{{site_path}}"

redirects: []

# Nginx dir and conf dir.
nginx_dir: /etc/nginx
conf_dir: "{{nginx_dir}}/sites-available"

# Nginx templated configuration files to create.
shared:
  - {template: ssl_params, file: ssl_params, directory: "{{nginx_dir}}"}
  - {template: gzip_params, file: gzip_params, directory: "{{nginx_dir}}"}
confs:
  - {template: site.conf, file: "{{site_fqdn}}", directory: "{{conf_dir}}"}

#######
# USERS
#######

# Specified users will be added to the remote server, along with all specified
# public keys. Removing a user from this list does NOT remove them from the
# remote server! You need to set their state to "absent", remove all the other
# properties for that user, and re-run the "configure" playbook. Also, the
# shadow password (that user's sudo password) should be a hash, and NOT plain
# text!
#
# Generate a shadow password hash using the following command:
# openssl passwd -1 -salt $(openssl rand -base64 6) yourpassword
#
# ===================== VERY IMPORTANT NOTE, PLEASE READ =====================
# When creating a new project using this workflow, REPLACE THE DEFAULT USERS
# WITH YOUR OWN USERS. If you leave the default users, we'll all have access to
# your servers, which is something we really don't want.
# ============================================================================
#
# If you have no users to define here, set users to an empty array, like:
# users: []
users:
  - name: guy
    state: present
    github_name: guyroutledge
    real_name: Guy Routledge
    shell: /bin/zsh
    dotfiles: true
    shadow_pass: $1$STr4+F+y$ih0sNLMZFwBfEZTCt.Zk90
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDhF5BsAnlL5B0ZjcXyI3qsCmji6nw217vTQFOHUU8NfQih7iHamwu57GRFxRqWZ7vQMki1fHyDwyyUWZyBsZRJS6oYu4zQKsr9zC03bZKbWiWQBwsuVcdWl5iPBa4wzFotY1vqg/A9wNPkq2R6GubVwE33QvasPgRl34N5XMYIZlq00VoKX9CjXZnmP9AEKWuWrkSdaB/hcq3AuZBi0LhsOnxH8CAiYyrcW8WDB2GkGAERRBrLw0w7XE21qea0FFTrzbq48GHSrSwUX6xHRA1q/L8UYa0ReCq+SKI6gP1JqrZp5PLde3mt+8qU9BEZFyQU+MAviA4CGO/1j1cx2u3d guy@guy.local

########
# DEPLOY
########

# Git repo address.
git_repo: git@github.com:saplingdigitalltd/{{project_name}}.git

# Parent directory for cloned repository directories. The clone_path and
# site_path should be children of this "mount" directory.
base_path: "/var/www/{{site_fqdn}}"

# Temporary location where the Git repo will be cloned and the build scripts
# will be run before going live.
clone_path: "{{base_path}}/temp"

# Where the production site symlink will exist.
site_path: "{{base_path}}/site"

# If defined, only this many of the most recent clone directories (including the
# current specified commit) will be retained. Anything older will be removed,
# once the current clone has been made live.
keep_n_most_recent: 3

# If this variable is defined, a file containing build information, including
# the timestamp, commit, sha, and a few other useful values will be generated
# after the build has completed. This file is relative to your project root.
build_info_path: "build.txt"

###################
# DEPLOY EXTRA VARS
###################

# Specify any ref (eg. branch, tag, SHA) to be deployed. This ref must be
# pushed to the remote git_repo before it can be deployed.
commit: master

# Clone and build the specified commit SHA, regardless of prior build status.
force: false

# Use the local project Git repo instead of the remote git_repo. This option
# only works with the vagrant inventory, and not with staging or production.
local: false
